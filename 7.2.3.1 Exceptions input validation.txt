
Objectives

Familiarize the student with:

    identifying situations when exceptions should be thrown;
    adding code to handle exceptions;
    adding code to throw exceptions.

Scenario

Try to change the program below (both the div and main functions). Insert a throw and a try-catch block instead of a Boolean value and res parameter (change it to a function return value). Remember to inform the user of any exceptions in simple words. Try to make two versions of your code, one that catches the division by zero exception, and another that checks arguments and then throws an exception (when the argument isn't proper). Which version is better?

Example input
2 1

Example output
2

Example input
6 0

Example output
Are you kidding me? Your input is not valid. You can't divide by zero.
====================================================================================================

#include <iostream>

using namespace std;

const int DivideByZero = 111;

float internaldiv(float arg1, float arg2)
{
	if (0==arg2) throw DivideByZero;
	return arg1 / arg2;
}

float div(float &res, float arg1, float arg2) {
	res = internaldiv(arg1, arg2);
  if(res==0) throw "You can't divide by zero";
	return res;
}

int main(void) {
	float r, a, b;
	while(cin >> a) {
		cin >> b;
    try{
      if(a==0 || b==0) throw "Your input is not valid";
		  div(r,a,b);
    }
    catch(int x)
    {
      cout<<"Error: "<<x<<endl;
    }
    catch(const char *e)
    {
      cout<<"Error: "<<e<<endl;
    }
    cout<<"Wynik: "<<r<<endl;
	}
	return 0;
}